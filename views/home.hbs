<div class=" card-welcome card-div mdl-card mdl-shadow--4dp">
  <div class="mdl-card__title center">
    <h2 class="mdl-card__title-text center card-title">Welcome {{user.profile.name.first}}</h2>
  </div>
  <label class="mdl-switch mdl-js-switch mdl-js-ripple-effect" for="enable-push">
      <input type="checkbox" id="enable-push" toggles value="true" name="enable-push" class="mdl-switch__input" unchecked>
    <span class="mdl-switch__label">Push Notifications</span>
  </label>
<div>
  <div>
    <span id="registration-id"></span>
      <pre class="paper-font-code1" style="overflow: auto; margin: 5px;" id="subscription"></pre>
  </div>
  <div id="send-instructions">
  </div>
</div>
</div>
<script>
  document.addEventListener('WebComponentsReady', function() {
  var ppm = document.querySelector('platinum-push-messaging');
  var toggle = document.getElementById('enable-push');
  var subscription = document.getElementById('subscription');
  var registrationId = document.getElementById('registration-id');
  var sendInstructions = document.getElementById('send-instructions');
  toggle.disabled = !ppm.supported;
  if (!ppm.supported) {
    document.getElementById('supported').style.display = 'none';
    document.getElementById('unsupported').style.display = '';
    console.log('Push not supported');
  }
  toggle.addEventListener('change', function() {
    if (toggle.checked) {
      ppm.enable();
      console.log("enabled");
    } else {
      ppm.disable();
    }
  });
  ppm.addEventListener('subscription-changed', function(event) {
    // GCM always needs the subscriptionId passed separately. Note that as of M45,
    // the subscriptionId and the endpoint have merged.
    var subscriptionId = ppm.subscription ? ppm.subscription.subscriptionId : undefined;
    if (ppm.subscription && !ppm.subscription.subscriptionId) {
      var endpointSections = ppm.subscription.endpoint.split('/');
      subscriptionId = endpointSections[endpointSections.length - 1];
    }
    subscription.textContent = JSON.stringify(ppm.subscription || undefined, null, 2);
    registrationId.textContent = subscriptionId ? subscriptionId : '';
    console.log(subscriptionId);
  });
  ppm.addEventListener('enabled-changed', function(event) {
    toggle.checked = ppm.enabled;
    sendInstructions.style.display = ppm.enabled ? '' : 'none';
  });
});
</script>
